# vim: ft=sh

# Default editor
export EDITOR="vim"

# Default locale: US makes sense for most programming tasks and anything that
# needs to assume I have an ANSI keyboard
export LANG="en_US.UTF-8"

# Printers are loaded with A4 paper
export LC_PAPER="en_GB.UTF-8"

# Default to 24h clock
export LC_TIME="en_GB.UTF-8"

# Timezone
export TZ="Europe/London"

# Required to get firefox to respect ~/.XCompose
export GTK_IM_MODULE='xim'

# Bug fix to force Firefox into Wayland hi-resolution mode
export MOZ_ENABLE_WAYLAND=1

# Various settings to force dark mode in GTK and QT apps
export GTK_THEME="Adwaita:dark"
export GTK2_RC_FILES="/usr/share/themes/Adwaita-dark/gtk-2.0/gtkrc"
export QT_STYLE_OVERRIDE="adwaita-dark"

# Enable per-user apt config (which then hooks into microdot)
export APT_CONFIG="$HOME/.config/apt.conf"

# Set up PATH
my_paths="\
$MICRODOT_INSTALL_PATH/bin:\
$HOME/bin:\
$HOME/.local/bin:\
$HOME/.cargo/bin:\
/usr/local/sbin:\
/usr/local/bin:\
/usr/sbin:\
/usr/bin:\
/sbin:\
/bin\
"

IFS=":"

# Build existing_paths: paths that are in PATH and not in my_paths
for path in $PATH
do
  case ":$my_paths:" in
    *":$path:"*)
      ;;
    *)
      existing_paths="${existing_paths:+$existing_paths:}$path" ;;
  esac
done

IFS="
"

# Prioritize anything existing that isn't in my_paths
PATH="${existing_paths:+$existing_paths:}${my_paths}"

# Postgres client config
export PSQLRC="$HOME/.config/psqlrc"

# iPython config
export IPYTHONDIR="$HOME/.config/ipython"

# Never use mtr's GTK mode
export MTR_OPTIONS="-t"

# Pick a random color to represent this host.  (See tmux.conf.)
pick_color() {
  cksum | awk '
    {
      p[ 0] = "801070"; p[ 1] = "a03050"; p[ 2] = "c06060";
      p[ 3] = "e09040"; p[ 4] = "e0d000"; p[ 5] = "90d050";
      p[ 6] = "40d080"; p[ 7] = "20c0b0"; p[ 8] = "00b0c0";
      p[ 9] = "0090c0"; p[10] = "3060b0"; p[11] = "603090";
      print p[int($1 % 12)]
    }
  '
}
export HOST_COLOR_HEX=`hostname | pick_color`

is_interactive() {
  case $- in
    *i*) return 0;;
      *) return 1;;
  esac
}

# If we are running interactively, bootstrap into tmux and/or fish.
if is_interactive && [ -z "$MICRODOT_DISABLED" ]
then
  # Restart inside tmux
  if [ "$SSH_TTY" ] && [ -z "$TMUX" ]
  then
    # Force 256 colour UTF-8 output
    # Start (or attach to) a session called `main`
    exec tmux -2u new-session -A -D -s main
  fi

  # Restart inside fish
  fish=$(command -v fish)
  if [ $fish ]
  then
    exec $fish -i
  fi
fi
